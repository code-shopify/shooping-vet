{%- comment -%}
------------------------------------------------------------------------------
	Section: List collections
------------------------------------------------------------------------------
{%- endcomment -%}

{%- assign custom_collections   = section.settings.custom_collections -%}
{%- assign sort_by              = section.settings.sort_by -%}
{%- assign heading 				= section.settings.heading -%}
{%- assign paginate_by 			= section.settings.paginate_by -%}
{%- assign text_alignment 		= section.settings.text_alignment -%}
{%- assign show_products_count 	= section.settings.show_products_count -%}
{%- assign overlay_color 		= section.settings.overlay_color -%}
{%- assign color_text 			= section.settings.color_text | default: '#fff' -%}
{%- assign container 			= section.settings.container_width -%}

{% if container == 'inherit' %}
	{% assign container_width = settings.container_width %}
{% else %}
	{% assign container_width = container %}
{% endif %}

{%- capture styles -%}
	--container-width: {{- container_width -}}; {{-  -}}
	--overlay-color: {{ overlay_color }}; {{-  -}}
	--overlay-text-color: {{ color_text }}; {{-  -}}
{%- endcapture -%}

{%- if collections.size > 0 or custom_collections.count > 0 -%}
	{% if custom_collections.count > 0 %}
		{% assign collections = custom_collections %}
	{% endif %}

	{% case sort_by %}
		{% when "title_reverse" %}
			{% assign sorted_collections = collections | sort: 'title' | reverse %}
		{% when "published_at_reverse" %}
			{% assign sorted_collections = collections | sort: 'published_at' | reverse %}
		{% when "products_count_reverse" %}
			{% assign sorted_collections = collections | sort: 'products_count' | reverse %}
		{% else %}
			{% assign sorted_collections = collections | sort: sort_by %}
	{% endcase %}

	{%- capture collections_grid -%}
		{%- if custom_collections.count > 0 -%}
			<div class="list-collections__row">
				{%- for collection in sorted_collections -%}
					{% if section.index > 1 %}
						{% assign is_lazy = true %}
					{% elsif section.index == 1 and forloop.index > 2 %}
						{% assign is_lazy = true %}
					{% endif %}

					{% assign item_size = 'small' %}
					{% assign mod_index = forloop.index0 | modulo: 6 %}

					{% if mod_index == 0 or mod_index == 5 %}
						{% assign item_size = 'large' %}
					{% endif %}

					<div class="list-collections__col {{ item_class }}">
						{%- render 'list-collections-card',
							collection: collection,
							image: collection.featured_image,
							text_alignment: text_alignment,
							show_products_count: show_products_count,
							is_lazy: is_lazy,
							item_size: item_size
						-%}
					</div>
				{%- endfor -%}
			</div>
		{%- else -%}
			{%- paginate collections by paginate_by -%}
				<div class="list-collections__row">
					{%- for collection in collections -%}
						{% if section.index > 1 %}
							{% assign is_lazy = true %}
						{% elsif section.index == 1 and forloop.index > 2 %}
							{% assign is_lazy = true %}
						{% endif %}

						{% assign item_size = 'small' %}
						{% assign mod_index = forloop.index0 | modulo: 6 %}

						{% if mod_index == 0 or mod_index == 5 %}
							{% assign item_size = 'large' %}
						{% endif %}

						<div class="list-collections__col need-animate tr-dur-0-5 js-animate {{ item_class }}">
							{%- render 'list-collections-card',
								collection: collection,
								image: collection.featured_image,
								text_alignment: text_alignment,
								show_products_count: show_products_count,
								is_lazy: is_lazy,
								item_size: item_size
							-%}
						</div>
					{%- endfor -%}
				</div>

				{%- if paginate.pages > 1 -%}
					<div class="list-collections__pagination-wrapper">
						{%- render 'pagination', paginate: paginate -%}
					</div>
				{%- endif -%}
			{%- endpaginate -%}
		{%- endif -%}
	{%- endcapture -%}
{%- endif -%}

{%- if collections_grid != blank -%}
	{%- capture list_collections -%}
		<div class="list-collections__container">
			{%- if heading != blank -%}
				<h1 class="h1 list-collections__heading">
					{{- heading -}}
				</h1>
			{%- endif -%}

			{%- if collections_grid != blank -%}
				{{- collections_grid -}}
			{%- endif -%}
		</div>
	{%- endcapture -%}
{%- endif -%}

{%- if list_collections != blank -%}
	{%- render 'adastra' with '/src/styles/list-collections.scss' -%}

	{%- style -%}
		#shopify-section-{{- section.id -}} {
			padding-top: {{- section.settings.offset_top_mobile -}}px;
			padding-bottom: {{- section.settings.offset_bottom_mobile -}}px;
		}

		@media screen and (min-width: 768px) {
			#shopify-section-{{- section.id -}} {
				padding-top: {{- section.settings.offset_top_desktop -}}px;
				padding-bottom: {{- section.settings.offset_bottom_desktop -}}px;
			}
		}
	{%- endstyle -%}

	<section class="list-collections" style="{{ styles }}">
		{{- list_collections -}}
	</section>
{%- endif -%}

{%- schema -%}
{
	"name": "List collections",
	"settings": [
		{
			"type": "collection_list",
			"id": "custom_collections",
			"label": "Custom collections",
			"info": "Display a custom collections instead of all collections list"
		},
		{
			"type": "select",
			"id": "sort_by",
			"options": [
				{
					"value": "title",
					"label": "Alphabetically, A-Z"
				},
				{
					"value": "title_reverse",
					"label": "Alphabetically, Z-A"
				},
				{
					"value": "published_at_reverse",
					"label": "Date, new to old"
				},
				{
					"value": "published_at",
					"label": "Date, old to new"
				},
				{
					"value": "products_count_reverse",
					"label": "Product count, high to low"
				},
				{
					"value": "products_count",
					"label": "Product count, low to high"
				}
			],
			"label": "Sort collections by:",
			"info": "Works only for custom collections"
		},
		{
			"type": "text",
			"id": "heading",
			"label": "Heading",
			"default": "All collections"
		},
		{
			"type": "range",
			"id": "paginate_by",
			"min": 8,
			"max": 24,
			"step": 1,
			"label": "Paginate by",
			"default": 16
		},
		{
			"type": "select",
			"id": "text_alignment",
			"label": "Text alignment",
			"options": [
				{
					"value": "left",
					"label": "Left"
				},
				{
					"value": "center",
					"label": "Center"
				},
				{
					"value": "right",
					"label": "Right"
				}
			],
			"default": "center"
		},
		{
			"type": "checkbox",
			"id": "show_products_count",
			"label": "Show products count",
			"default": true
		},
		{
			"type": "header",
			"content": "Colors"
		},
		{
			"type": "color_background",
			"id": "overlay_color",
			"label": "Overlay color"
		},
		{
			"type": "color",
			"id": "color_text",
			"label": "Text",
			"default": "#fff"
		},
		{
			"type": "header",
			"content": "Layout"
		},
		{
			"type": "select",
			"id": "container_width",
			"label": "Container width",
			"options": [
				{
					"value": "1432px",
					"label": "Default - 1400px"
				},
				{
					"value": "1952px",
					"label": "Large - 1920px"
				},
				{
					"value": "100%",
					"label": "Full width"
				},
				{
					"value": "inherit",
					"label": "Inherit of general setting"
				}
			],
			"default": "inherit",
			"info": "if you select 'Inherit of general setting', then container width will be used from the Theme settings/Layout"
		},
		{
			"type": "range",
			"id": "offset_top_desktop",
			"min": 0,
			"max": 100,
			"step": 1,
			"unit": "px",
			"label": "Desktop offset top",
			"default": 24
		},
		{
			"type": "range",
			"id": "offset_bottom_desktop",
			"min": 0,
			"max": 100,
			"step": 1,
			"unit": "px",
			"label": "Desktop offset bottom",
			"default": 60
		},
		{
			"type": "range",
			"id": "offset_top_mobile",
			"min": 0,
			"max": 100,
			"step": 1,
			"unit": "px",
			"label": "Mobile offset top",
			"default": 24
		},
		{
			"type": "range",
			"id": "offset_bottom_mobile",
			"min": 0,
			"max": 100,
			"step": 1,
			"unit": "px",
			"label": "Mobile offset bottom",
			"default": 40
		}
	]
}
{%- endschema -%}
